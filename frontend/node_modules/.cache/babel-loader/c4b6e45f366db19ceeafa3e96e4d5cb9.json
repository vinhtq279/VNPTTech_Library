{"ast":null,"code":"var _jsxFileName = \"/home/vinhtq/Dev/Library-Management-System/frontend/src/components/Issue/Issue.js\";\nimport React from 'react';\nimport './Issue.css';\nimport Cookies from 'js-cookie';\n\nclass Books extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      header: /*#__PURE__*/React.createElement(\"thead\", {\n        id: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 25\n        }\n      }, \"Book Name\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }\n      }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }\n      }, \"Introduction\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }\n      }, \"Image\"), /*#__PURE__*/React.createElement(\"th\", {\n        scope: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 4\n        }\n      }))),\n      books: []\n    };\n\n    this.issueIt = el => {\n      fetch('/api/borrow', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ ...el,\n          sid: 'anything'\n        })\n      });\n      /*.then(res => {\r\n           fetch('/api/borrowed')\r\n           .then(res => res.json())\r\n           .then(e => console.log(e));\r\n      });*/\n    };\n  }\n\n  async componentDidMount() {\n    await fetch(\"/api/getBooks\").then(res => res.json()).then(books => {\n      books.map(el => {\n        console.log(`el.count is: ${el.count}`);\n\n        if (el.count > 0) {\n          this.setState({\n            books: [...this.state.books, /*#__PURE__*/React.createElement(\"tr\", {\n              key: el.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 41\n              }\n            }, el.name.toUpperCase()), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 41\n              }\n            }, el.author), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }\n            }, el.introduction), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: el.image,\n              alt: \"No\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 45\n              }\n            })), /*#__PURE__*/React.createElement(\"td\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 6\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => this.issueIt(el),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 10\n              }\n            }, \"Issue\")))]\n          });\n        }\n\n        return el;\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"issue\",\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }\n    }, \"Books You Can Borrow\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"results\",\n      className: \"table table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, this.state.header, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, this.state.books)));\n  }\n\n}\n\nexport default Books;","map":{"version":3,"sources":["/home/vinhtq/Dev/Library-Management-System/frontend/src/components/Issue/Issue.js"],"names":["React","Cookies","Books","Component","state","header","books","issueIt","el","fetch","method","headers","body","JSON","stringify","sid","componentDidMount","then","res","json","map","console","log","count","setState","id","name","toUpperCase","author","introduction","image","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Issue.css';\r\nimport Cookies from 'js-cookie';\r\n\r\nclass Books extends React.Component {\r\n    \r\n    state = {\r\n        header: <thead id=\"header\">\r\n                    <tr>\r\n                        <th scope=\"col\">Book Name</th>\r\n                        <th scope=\"col\">Author</th>\r\n                        <th scope=\"col\">Introduction</th>\r\n                        <th scope=\"col\">Image</th>\r\n\t\t\t<th scope=\"col\"></th>\r\n                    </tr>\r\n                </thead>,\r\n        books: []\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await fetch(\"/api/getBooks\")\r\n            .then(res => res.json())\r\n            .then(books => {\r\n                books.map(\r\n                    el => {\r\n                        console.log(`el.count is: ${el.count}`);\r\n                        if(el.count > 0) {\r\n                            this.setState({\r\n                                books: [...this.state.books, \r\n                                    <tr key={el.id}>\r\n                                        <td>{el.name.toUpperCase()}</td>\r\n                                        <td>{el.author}</td>\r\n                                        <td>{el.introduction}</td>\r\n                                        <td><img src={el.image} alt=\"No\"/></td>\r\n\t\t\t\t\t<td><button className=\"btn btn-primary\" onClick={() => this.issueIt(el)}>Issue</button></td>\r\n                                    </tr>]\r\n                            })\r\n                        }\r\n                        return el;\r\n                    })\r\n            });\r\n    }\r\n\r\n    issueIt = el => {\r\n        fetch('/api/borrow', {\r\n                method: 'post',\r\n                headers: {'Content-Type':'application/json'},\r\n                body: JSON.stringify({\r\n                    ...el,\r\n                    sid: 'anything'\r\n                })\r\n           });\r\n           /*.then(res => {\r\n                fetch('/api/borrowed')\r\n                .then(res => res.json())\r\n                .then(e => console.log(e));\r\n           });*/\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='issue' className=\"text-center\">\r\n\t\t<h1>Books You Can Borrow</h1>\r\n                <table id=\"results\" className=\"table table-hover\">\r\n                    {this.state.header}\r\n                    <tbody>\r\n                        {this.state.books}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}